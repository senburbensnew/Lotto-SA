// <auto-generated />
using System;
using LOTO_SA_Library.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LOTO_SA_Library.Migrations
{
    [DbContext(typeof(LottoSAContext))]
    partial class LottoSAContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LOTO_SA_Library.Models.MiseJoueur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MisePremierNumeroGagnant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiseSecondNumeroGagnant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiseTroisiemeNumeroGagnant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MontantGagne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PremierNumeroGagnant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondNumeroGagnant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatutMiseJoueur")
                        .HasColumnType("int");

                    b.Property<int>("TirageId")
                        .HasColumnType("int");

                    b.Property<string>("TroisiemeNumeroGagnant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TirageId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("MiseJoueurs");
                });

            modelBuilder.Entity("LOTO_SA_Library.Models.Profession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Professions");
                });

            modelBuilder.Entity("LOTO_SA_Library.Models.Tirage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("PremierNumeroGagnant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondNumeroGagnant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatutTirage")
                        .HasColumnType("int");

                    b.Property<string>("TroisiemeNumeroGagnant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("coefficientPremierNumeroGagnant")
                        .HasColumnType("real");

                    b.Property<float>("coefficientSecondNumeroGagnant")
                        .HasColumnType("real");

                    b.Property<float>("coefficientTroisiemeNumeroGagnant")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Tirages");
                });

            modelBuilder.Entity("LOTO_SA_Library.Models.TransactionCompte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTransaction")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MiseJoueurId")
                        .HasColumnType("int");

                    b.Property<double>("Montant")
                        .HasColumnType("float");

                    b.Property<int>("SensTransaction")
                        .HasColumnType("int");

                    b.Property<int>("TypeTransactionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MiseJoueurId");

                    b.HasIndex("TypeTransactionId");

                    b.ToTable("TransactionComptes");
                });

            modelBuilder.Entity("LOTO_SA_Library.Models.TypeTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeTransactions");
                });

            modelBuilder.Entity("LOTO_SA_Library.Models.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeUtilisateur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfessionId")
                        .HasColumnType("int");

                    b.Property<int>("Profil")
                        .HasColumnType("int");

                    b.Property<string>("Sexe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatutUtilisateur")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfessionId");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("LOTO_SA_Library.Models.MiseJoueur", b =>
                {
                    b.HasOne("LOTO_SA_Library.Models.Tirage", "Tirage")
                        .WithMany("MiseJoueurs")
                        .HasForeignKey("TirageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LOTO_SA_Library.Models.Utilisateur", "Utilisateur")
                        .WithMany("MiseJoueurs")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tirage");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("LOTO_SA_Library.Models.TransactionCompte", b =>
                {
                    b.HasOne("LOTO_SA_Library.Models.MiseJoueur", "MiseJoueur")
                        .WithMany("transactionComptes")
                        .HasForeignKey("MiseJoueurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LOTO_SA_Library.Models.TypeTransaction", "TypeTransaction")
                        .WithMany("TransactionsCompte")
                        .HasForeignKey("TypeTransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MiseJoueur");

                    b.Navigation("TypeTransaction");
                });

            modelBuilder.Entity("LOTO_SA_Library.Models.Utilisateur", b =>
                {
                    b.HasOne("LOTO_SA_Library.Models.Profession", "Profession")
                        .WithMany("Utilisateurs")
                        .HasForeignKey("ProfessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profession");
                });

            modelBuilder.Entity("LOTO_SA_Library.Models.MiseJoueur", b =>
                {
                    b.Navigation("transactionComptes");
                });

            modelBuilder.Entity("LOTO_SA_Library.Models.Profession", b =>
                {
                    b.Navigation("Utilisateurs");
                });

            modelBuilder.Entity("LOTO_SA_Library.Models.Tirage", b =>
                {
                    b.Navigation("MiseJoueurs");
                });

            modelBuilder.Entity("LOTO_SA_Library.Models.TypeTransaction", b =>
                {
                    b.Navigation("TransactionsCompte");
                });

            modelBuilder.Entity("LOTO_SA_Library.Models.Utilisateur", b =>
                {
                    b.Navigation("MiseJoueurs");
                });
#pragma warning restore 612, 618
        }
    }
}
